{
	"info": {
		"_postman_id": "b8cd72f9-c9b6-4384-9aa8-a7f382c91d38",
		"name": "Cordacademy Obligation CorDapp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Party A",
			"item": [
				{
					"name": "/admin/nmc/clear",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/admin/nmc/clear",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"admin",
								"nmc",
								"clear"
							]
						},
						"description": "Clears the network map cache"
					},
					"response": []
				},
				{
					"name": "/admin/nmc/refresh",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/admin/nmc/refresh",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"admin",
								"nmc",
								"refresh"
							]
						},
						"description": "Refreshes the network map cache"
					},
					"response": []
				},
				{
					"name": "/admin/flows/registered",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/admin/flows/registered",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"admin",
								"flows",
								"registered"
							]
						},
						"description": "Lists the flows that are registered by the node."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/admin/flows/draining",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"admin",
								"flows",
								"draining"
							]
						},
						"description": "Determines whether flow draining is enabled on the node."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining/enable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/admin/flows/draining/enable",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"admin",
								"flows",
								"draining",
								"enable"
							]
						},
						"description": "Enables flow draining."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining/disable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/admin/flows/draining/disable",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"admin",
								"flows",
								"draining",
								"disable"
							]
						},
						"description": "Disables flow draining."
					},
					"response": []
				},
				{
					"name": "/nodes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/nodes",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"nodes"
							]
						},
						"description": "Gets detailed local and network node information."
					},
					"response": []
				},
				{
					"name": "/nodes/time",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/nodes/time",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"nodes",
								"time"
							]
						},
						"description": "Gets the current time of the local node."
					},
					"response": []
				},
				{
					"name": "/nodes/local",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/nodes/local",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"nodes",
								"local"
							]
						},
						"description": "Gets the local node identity."
					},
					"response": []
				},
				{
					"name": "/nodes/network",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/nodes/network",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"nodes",
								"network"
							]
						},
						"description": "Gets a list of network node identities."
					},
					"response": []
				},
				{
					"name": "/nodes/shutdown",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/nodes/shutdown",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"nodes",
								"shutdown"
							]
						},
						"description": "Determines whether a node shutdown is pending for the local node."
					},
					"response": []
				},
				{
					"name": "/nodes/shutdown",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/nodes/shutdown",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"nodes",
								"shutdown"
							]
						},
						"description": "Shuts down the local node."
					},
					"response": []
				},
				{
					"name": "/obligations",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_a}}/obligations",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"obligations"
							]
						},
						"description": "Gets all unconsumed obligation states."
					},
					"response": []
				},
				{
					"name": "/obligations/issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"obligor\": \"O=PartyB, L=New York, C=US\",\n\t\"borrowed\": 123.45,\n\t\"currency\": \"GBP\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_a}}/obligations/issue",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"obligations",
								"issue"
							]
						},
						"description": "Issues an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/transfer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\",\n\t\"obligee\": \"O=PartyC, L=Paris, C=FR\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_a}}/obligations/transfer",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"obligations",
								"transfer"
							]
						},
						"description": "Transfers an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/settle",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\",\n\t\"settled\": 23.45,\n\t\"currency\": \"GBP\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_a}}/obligations/settle",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"obligations",
								"settle"
							]
						},
						"description": "Settles an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/exit",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_a}}/obligations/exit",
							"host": [
								"localhost"
							],
							"port": "{{port_a}}",
							"path": [
								"obligations",
								"exit"
							]
						},
						"description": "Exits a fully settled obligation."
					},
					"response": []
				}
			]
		},
		{
			"name": "Party B",
			"item": [
				{
					"name": "/admin/nmc/clear",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/admin/nmc/clear",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"admin",
								"nmc",
								"clear"
							]
						},
						"description": "Clears the network map cache"
					},
					"response": []
				},
				{
					"name": "/admin/nmc/refresh",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/admin/nmc/refresh",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"admin",
								"nmc",
								"refresh"
							]
						},
						"description": "Refreshes the network map cache"
					},
					"response": []
				},
				{
					"name": "/admin/flows/registered",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/admin/flows/registered",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"admin",
								"flows",
								"registered"
							]
						},
						"description": "Lists the flows that are registered by the node."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/admin/flows/draining",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"admin",
								"flows",
								"draining"
							]
						},
						"description": "Determines whether flow draining is enabled on the node."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining/enable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/admin/flows/draining/enable",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"admin",
								"flows",
								"draining",
								"enable"
							]
						},
						"description": "Enables flow draining."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining/disable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/admin/flows/draining/disable",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"admin",
								"flows",
								"draining",
								"disable"
							]
						},
						"description": "Disables flow draining."
					},
					"response": []
				},
				{
					"name": "/nodes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/nodes",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"nodes"
							]
						},
						"description": "Gets detailed local and network node information."
					},
					"response": []
				},
				{
					"name": "/nodes/time",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/nodes/time",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"nodes",
								"time"
							]
						},
						"description": "Gets the current time of the local node."
					},
					"response": []
				},
				{
					"name": "/nodes/local",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/nodes/local",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"nodes",
								"local"
							]
						},
						"description": "Gets the local node identity."
					},
					"response": []
				},
				{
					"name": "/nodes/network",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/nodes/network",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"nodes",
								"network"
							]
						},
						"description": "Gets a list of network node identities."
					},
					"response": []
				},
				{
					"name": "/nodes/shutdown",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/nodes/shutdown",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"nodes",
								"shutdown"
							]
						},
						"description": "Determines whether a node shutdown is pending for the local node."
					},
					"response": []
				},
				{
					"name": "/nodes/shutdown",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/nodes/shutdown",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"nodes",
								"shutdown"
							]
						},
						"description": "Shuts down the local node."
					},
					"response": []
				},
				{
					"name": "/obligations",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_b}}/obligations",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"obligations"
							]
						},
						"description": "Gets all unconsumed obligation states."
					},
					"response": []
				},
				{
					"name": "/obligations/issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"obligor\": \"O=PartyC, L=Paris, C=FR\",\n\t\"borrowed\": 123.45,\n\t\"currency\": \"GBP\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_b}}/obligations/issue",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"obligations",
								"issue"
							]
						},
						"description": "Issues an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/transfer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\",\n\t\"obligee\": \"O=PartyA, L=London, C=GB\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_b}}/obligations/transfer",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"obligations",
								"transfer"
							]
						},
						"description": "Transfers an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/settle",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\",\n\t\"settled\": 23.45,\n\t\"currency\": \"GBP\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_b}}/obligations/settle",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"obligations",
								"settle"
							]
						},
						"description": "Settles an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/exit",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_b}}/obligations/exit",
							"host": [
								"localhost"
							],
							"port": "{{port_b}}",
							"path": [
								"obligations",
								"exit"
							]
						},
						"description": "Exits a fully settled obligation."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "66b3b9ea-d2a8-4670-8211-e02714676145",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "55a04def-27fe-4a41-b675-12e4d6b993bd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Party C",
			"item": [
				{
					"name": "/admin/nmc/clear",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/admin/nmc/clear",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"admin",
								"nmc",
								"clear"
							]
						},
						"description": "Clears the network map cache"
					},
					"response": []
				},
				{
					"name": "/admin/nmc/refresh",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/admin/nmc/refresh",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"admin",
								"nmc",
								"refresh"
							]
						},
						"description": "Refreshes the network map cache"
					},
					"response": []
				},
				{
					"name": "/admin/flows/registered",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/admin/flows/registered",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"admin",
								"flows",
								"registered"
							]
						},
						"description": "Lists the flows that are registered by the node."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/admin/flows/draining",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"admin",
								"flows",
								"draining"
							]
						},
						"description": "Determines whether flow draining is enabled on the node."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining/enable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/admin/flows/draining/enable",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"admin",
								"flows",
								"draining",
								"enable"
							]
						},
						"description": "Enables flow draining."
					},
					"response": []
				},
				{
					"name": "/admin/flows/draining/disable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/admin/flows/draining/disable",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"admin",
								"flows",
								"draining",
								"disable"
							]
						},
						"description": "Disables flow draining."
					},
					"response": []
				},
				{
					"name": "/nodes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/nodes",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"nodes"
							]
						},
						"description": "Gets detailed local and network node information."
					},
					"response": []
				},
				{
					"name": "/nodes/time",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/nodes/time",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"nodes",
								"time"
							]
						},
						"description": "Gets the current time of the local node."
					},
					"response": []
				},
				{
					"name": "/nodes/local",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/nodes/local",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"nodes",
								"local"
							]
						},
						"description": "Gets the local node identity."
					},
					"response": []
				},
				{
					"name": "/nodes/network",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/nodes/network",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"nodes",
								"network"
							]
						},
						"description": "Gets a list of network node identities."
					},
					"response": []
				},
				{
					"name": "/nodes/shutdown",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/nodes/shutdown",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"nodes",
								"shutdown"
							]
						},
						"description": "Determines whether a node shutdown is pending for the local node."
					},
					"response": []
				},
				{
					"name": "/nodes/shutdown",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/nodes/shutdown",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"nodes",
								"shutdown"
							]
						},
						"description": "Shuts down the local node."
					},
					"response": []
				},
				{
					"name": "/obligations",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:{{port_c}}/obligations",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"obligations"
							]
						},
						"description": "Gets all unconsumed obligation states."
					},
					"response": []
				},
				{
					"name": "/obligations/issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"obligor\": \"O=PartyA, L=London, C=GB\",\n\t\"borrowed\": 123.45,\n\t\"currency\": \"GBP\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_c}}/obligations/issue",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"obligations",
								"issue"
							]
						},
						"description": "Issues an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/transfer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\",\n\t\"obligee\": \"O=PartyB, L=New York, C=US\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_c}}/obligations/transfer",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"obligations",
								"transfer"
							]
						},
						"description": "Transfers an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/settle",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\",\n\t\"settled\": 23.45,\n\t\"currency\": \"GBP\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_c}}/obligations/settle",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"obligations",
								"settle"
							]
						},
						"description": "Settles an obligation."
					},
					"response": []
				},
				{
					"name": "/obligations/exit",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"linearId\": \"REPLACE_WITH_A_REAL_LINEAR_ID\"\n}"
						},
						"url": {
							"raw": "localhost:{{port_c}}/obligations/exit",
							"host": [
								"localhost"
							],
							"port": "{{port_c}}",
							"path": [
								"obligations",
								"exit"
							]
						},
						"description": "Exits a fully settled obligation."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "69edf2d4-b5b2-4f27-944b-a7a23cfbacf7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ae862aed-7e46-4397-8b79-f60e3c6e914a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e62cc713-ce60-4132-93a8-f4a45d76452f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "05a2dd54-6da6-41f1-8f60-c9b4da85e28e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "eea0dab0-d000-4814-a0b9-b114ac19118c",
			"key": "port_a",
			"value": "8085",
			"type": "string"
		},
		{
			"id": "396e9c4a-ec65-47ff-ae25-f59ec6c1afe4",
			"key": "port_b",
			"value": "8089",
			"type": "string"
		},
		{
			"id": "8d72d8ff-f4f4-45d9-b8a6-7e143ef2e6a9",
			"key": "port_c",
			"value": "8093",
			"type": "string"
		}
	]
}